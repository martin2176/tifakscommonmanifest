---
- hosts: localhost
  ignore_unreachable: true
  vars:
      resource_group: <+serviceVariables.azureresourcegroup>
      location: '<+serviceVariables.azurelocation>'
      sbnamespace: <+pipeline.variables.sbnamespace>
      topic: <+serviceVariables.entity>_<+serviceVariables.event>_t_<+serviceVariables.topicversion>
      returndatadirectory: <+pipeline.executionId>
      sku: <+serviceVariables.sku>
      state: absent
  tasks:
    - name: Ensure resource group exist
      tags: createresourcegroup
      ignore_errors: true
      block:
       - name: Check for resource group
         azure_rm_resourcegroup:
           name: "{{ resource_group }}"
           location: "{{ location }}"
         register: resourcegroupreturndata
      always:
       - name: Copy return data to file
         local_action:
          module: copy
          content: "{{ resourcegroupreturndata }}"
          dest: "/tmp/{{ returndatadirectory }}-returndata"
    - name: Delete a topic
      tags: deletetopic
      ignore_errors: true
      block:
       - name: Delete a topic
         azure_rm_servicebustopic:
           name: "{{ topic }}"
           namespace: "{{ sbnamespace }}"
           resource_group: "{{ resource_group }}"
           state: "{{ state }}"
         register: topicreturndata
      always:
       - name: Copy return data to file
         local_action:
          module: copy
          content: "{{ topicreturndata }}"
          dest: "/tmp/{{ returndatadirectory }}-returndata"